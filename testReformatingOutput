import pandas as pd

fname = '/Users/tariqcannonier/Desktop/ABCD PsychoPy/ABCD NBACK/data/NDAR_INVABCD1234/NDAR_INVABCD1234_WM_9.csv'

# Create the list of headers that the script should reorganize and create the designated order from the EPrime Version
headerList = ['ExperimentName','Subject','Session','Allowed','Clock.Information',
    'ConsecNonResp[Session]','ConsecRTLess200[Session]','DataFile.Basename','ExperimentVersion','FontStyle','Group',
    'Handedness','Main.RefreshRate','NARGUID','Nontarget','RandomSeed','RunNumber','RuntimeCapabilities','RuntimeVersion',
    'RuntimeVersionExpected','RunTrialNumber[Session]','SessionDate','SessionStartDateTimeUtc','SessionTime','StimuliDir',
    'StudioVersion','SUBID','Target','TotalRespGreater200[Session]','TrialsPerRun[Session]','triggercode','Block',
    'BlockType','ConsecNonResp[Block]','ConsecRTLess200[Block]','ConsecSameResp','ControlAcc','CorrectResponse',
    'Cue2Back.Duration','Cue2Back.DurationError','Cue2Back.FinishTime','Cue2Back.OffsetDelay','Cue2Back.OffsetTime',
    'Cue2Back.OnsetDelay','Cue2Back.OnsetTime','Cue2Back.OnsetToOnsetTime','Cue2Back.StartTime','CueFix.Duration','CueFix.DurationError',
    'CueFix.FinishTime','CueFix.OffsetDelay','CueFix.OffsetTime','CueFix.OnsetDelay','CueFix.OnsetTime','CueFix.OnsetToOnsetTime',
    'CueFix.RTTime','CueFix.StartTime','CueTarget.Duration','CueTarget.DurationError','CueTarget.FinishTime','CueTarget.OffsetDelay',
    'CueTarget.OffsetTime','CueTarget.OnsetDelay','CueTarget.OnsetTime','CueTarget.OnsetToOnsetTime','CueTarget.StartTime','Fix.Duration',
    'Fix.DurationError','Fix.FinishTime','Fix.OffsetDelay','Fix.OffsetTime','Fix.OnsetDelay','Fix.OnsetTime','Fix.OnsetToOnsetTime',
    'Fix.StartTime','Fix15sec.Duration','Fix15sec.DurationError','Fix15sec.FinishTime','Fix15sec.OffsetDelay','Fix15sec.OffsetTime',
    'Fix15sec.OnsetDelay','Fix15sec.OnsetTime','Fix15sec.OnsetToOnsetTime','Fix15sec.StartTime','Procedure[Block]','Run1Block1','Run1Block2',
    'Run1Block3','Run1Block4','Run1Block5','Run1Block6','Run1Block7','Run1Block8','Run2Block1','Run2Block2','Run2Block3','Run2Block4','Run2Block5',
    'Run2Block6','Run2Block7','Run2Block8','Running[Block]','RunTrialNumber[Block]','Stim.ACC','Stim.CRESP','Stim.Duration','Stim.DurationError',
    'Stim.FinishTime','Stim.OffsetDelay','Stim.OffsetTime','Stim.OnsetDelay','Stim.OnsetTime','Stim.OnsetToOnsetTime','Stim.RESP','Stim.RT',
    'Stim.RTTime','Stim.StartTime','StimType','Stimulus','TargetType','TotalRespGreater200[Block]','TrialsPerRun[Block]','v1ProcList','v1ProcList.Cycle',
    'v1ProcList.Sample','Trial','GetReady.DurationError','GetReady.OffsetDelay','GetReady.OffsetTime','GetReady.OnsetDelay','GetReady.OnsetTime',
    'GetReady.OnsetToOnsetTime','GetReady.RTTime','GetReady2.DurationError','GetReady2.OffsetDelay','GetReady2.OffsetTime','GetReady2.OnsetDelay',
    'GetReady2.OnsetTime','GetReady2.OnsetToOnsetTime','GetReady2.RTTime','Procedure[Trial]','Running[Trial]','SiemensPad.FinishTime','SiemensPad.OffsetDelay',
    'SiemensPad.OffsetTime','SiemensPad.OnsetDelay','SiemensPad.OnsetTime','SiemensPad.OnsetToOnsetTime','SiemensPad.RTTime','Waiting4Scanner','Waiting4Scanner.Cycle',
    'Waiting4Scanner.Sample','Waiting4Scanner2','Waiting4Scanner2.Cycle','Waiting4Scanner2.Sample']

# Read in data from output
rawData = pd.read_csv(fname)
newFname = fname.replace('.csv','_Corrected.csv')
validHeader = []

# Iterate through the headerList and determine elements that are within the currect document
for colHeader in headerList:
    try:
        rawData[colHeader]
        validHeader.extend([colHeader])
    except KeyError:
        print "This header, %s, was not in the data file" % colHeader

# Create the new dataframe 
orgData = rawData[validHeader]
orgData.to_csv(newFname)
#print orgData

# Iterate through headerList and create a new file with the reorganized information
#for colHeader in headerList:
#    orgdata = rawData[
#    #orgdata[colHeader].to_csv(newFname)

# Reorder
#orgData.to_csv(fname)